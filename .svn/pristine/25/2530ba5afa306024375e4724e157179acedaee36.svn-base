/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/* 
 * File:   clListKeysResponder.cpp
 * Author: andy
 * 
 * Created on 24 July 2018, 14:58
 */

#include "clListKeysResponder.h"

std::string line;

clListKeysResponder::clListKeysResponder() {
}

clListKeysResponder::clListKeysResponder(const clListKeysResponder& orig) {
}

clListKeysResponder::~clListKeysResponder() {
}
void clListKeysResponder::getResponse(nlohmann::json &jReply, std::string remoteName){   

    nlohmann::json jKeys;
    
    std::string path = lircDir + remoteName + ".lircd.conf";
    //std::ifstream infile(path);
    std::fstream infile;
    //std::cout << "Path: " << path << std::endl;
    infile.open (path, std::fstream::in);
    
    if (readUntilLineContains(infile,"begin codes")){
        if (readKeys(infile, jKeys)>0){
            jReply["keys"]=jKeys;
        } else {
           onError(jReply, "No Keys in conf file"); 
        }
    } else {
        onError(jReply, "invalid conf file");
    }
    infile.close();
       

}
bool clListKeysResponder::readUntilLineContains(std::fstream &stream, const std::string &searchFor){
    bool found=false;
    while (getLine(stream)){
        
        if (stringContains(line, searchFor)) {
            found=true;
            break;
        }
    }
    return found;
}

int clListKeysResponder::readKeys(std::fstream &stream, nlohmann::json &jKeys){
    int keysFound=0;
    while (getLine(stream)){
        if (stringContains(line, "end codes")) {
            break;
        } else {
            std::string keyName=getKeyName();
            if (keyName.length() != 0){
                jKeys.push_back(getKeyName());
                keysFound++;
            }
        }
    }
    return keysFound;
}
bool clListKeysResponder::getLine(std::fstream &stream){
    std::getline(stream, line);
    //std::cout << "Line: " << line << std::endl;
    return (!stream.eof());
}
std::string clListKeysResponder::getKeyName(){
    const std::string whitespace = " \t\f\v\n\r";
    int start = line.find_first_not_of(whitespace);
    //std::cout << "Start: " << start << std::endl;
    if (start == std::string::npos) return "";
    int end = line.find_first_of(whitespace, start);
    //std::cout << "end: " << end << std::endl;
    if (end == std::string::npos) return "";
    //std::cout << "Key: '" << line.substr(start, end-start) << "'" <<std::endl;
    if (end > start) return line.substr(start, end-start);
    return "";
    
}
